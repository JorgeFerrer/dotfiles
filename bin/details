#!/bin/bash

# details
# Shows either the variable value, file name, alias info, or function definition
# for a given executable.
# @argument name of variable, function, alias, or script to list the details for

NO_EXIST="$1 doesn't seem to exist"

if [[ $(command -v "$1") && ! -e "$1" ]]; then
	cmd_type="$(type -t "$1")"

	if [[ $cmd_type == "alias" ]]; then
		alias "$1" 2> /dev/null
	elif [[ $cmd_type == "file" ]]; then
		which "$1" 2> /dev/null
	elif [[ $cmd_type == "function" ]]; then
		declare -f "$1" 2> /dev/null
		shopt -s extdebug
		declare -F "$1"
		shopt -u extdebug
	else
		type -a "$1" 2> /dev/null
	fi
elif [[ "$1" == */* || -e "$1" ]]; then
	# path=$(python -c "import os,sys; print os.path.realpath(sys.argv[1])" "$1")
	path=$(python -c "import os,sys; print os.path.abspath(sys.argv[1])" "$1")
	# path=$(node -pe "require('path').resolve(process.argv[1]);" "$1")

	if [[ -e "$path" ]]; then
		# echo "$path is a file"
		# ls -ldGhg --time-style="+%m/%d/%Y %r" "$path"
		ls -ldGhg --time-style="+%m/%d/%Y %I:%M%p" --color=always "$path" | cut -f1,4- -d' '
	else
		path="${path%/*}"

		while [[ ! -e "$path" && "$path" == */* ]]; do
			path="${path%/*}"
		done

		if [[ -e "$path" && -n "$path" ]]; then
			echo "${NO_EXIST}. The nearest directory is $path"
		else
			echo $NO_EXIST
		fi
	fi
else
	# let's check if it's a variable
	if [[ -n ${!1+x} ]]; then
		echo "\$$1 is a variable set to: ${!1}"
	else
		echo $NO_EXIST
	fi
fi